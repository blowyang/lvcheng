<template>
  <wxc-popup animation-mode="none" align="center" locked="true" class="popup">
    <view class="dialog" catchtap="onContentTap">
      <view class="dialog__title" wx:if="{{title}}" style="color: {{titleColor}}">{{title}}</view>
      <view class="dialog__content">
        <image class="dialog__content--image" wx:if="{{image}}" src="{{image}}" mode="aspectFill"></image>
        <view class="dialog__content--text" wx:if="{{content}}" style="color: {{contentColor}}">{{content}}</view>
        <slot></slot>
      </view>
      <view class="dialog__btns">
        <view class="dialog__btns--cancel" wx:if="{{cancelText}}" style="color: {{cancelColor}}" bindtap="cancelCallback">{{cancelText}}</view>
        <view class="dialog__btns--confirm" wx:if="{{confirmText}}" style="color: {{confirmColor}}" bindtap="confirmCallback">{{confirmText}}</view>
      </view>
    </view>
  </wxc-popup>
</template>

<script>
export default {
  config: {
    usingComponents: {
      'wxc-popup': '@minui/wxc-popup'
    }
  },
  behaviors: [],
  properties: {
    title: {
      type: String
    },
    titleColor: {
      type: String,
      value: '#000000'
    },
    content: {
      type: String
    },
    contentColor: {
      type: String,
      value: '#888888'
    },
    confirmText: {
      type: String
    },
    confirmColor: {
      type: String,
      value: '#ff5777'
    },
    cancelText: {
      type: String
    },
    cancelColor: {
      type: String,
      value: '#666666'
    },
    image: {
      type: String
    }
  },
  data: {},
  methods: {
    show() {
      let popupComponent = this.selectComponent('.popup')
      popupComponent && popupComponent.show();
    },
    hide() {
      let popupComponent = this.selectComponent('.popup')
      popupComponent && popupComponent.hide();
    },
    onContentTap () {},
    cancelCallback () {
      this.triggerEvent('cancel')
    },
    confirmCallback () {
      this.triggerEvent('confirm')
    }
  }
}


</script>

<style lang="pcss">
@b dialog {
  background: #ffffff;
  width: 560px;
  border-radius: 8px;
  background-color: #ffffff;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  padding-top: 50px;

  @e title {
    font-size: 36px;
    margin-bottom: 18px;
    padding: 0 36px;
  }

  @e content {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;

    @m image {
      width: 488px;
      height: 330px;
      background-color: #ebebeb;
      margin: 6px 36px 18px;
    }

    @m text {
      font-size: 30px;
      padding: 0 36px 30px;
      text-align: center;
    }
  }

  @e btns {
    width: 100%;
    line-height: 100px;
    height: 100px;
    border-top: 1px solid #e5e5e5;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    font-size: 36px;

    @m cancel {
      flex: 1;
      border-right: 1px solid #e5e5e5;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    @m confirm {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}
</style>
