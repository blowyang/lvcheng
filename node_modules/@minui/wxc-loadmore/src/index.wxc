<template>
  <view class="loadmore" wx:if="{{iconStatus && iconType}}">
    <block wx:if="{{isEnd}}">
      <view class="loadmore__line"></view>

        <image
          wx:if="{{!text && iconStatus === iconType.HIDDEN}}"
          class="loadmore__icon"
          src="{{ type.icon }}"
          mode="aspectFill"
        ></image>

        <image
          wx:if="{{iconStatus === iconType.SHOW_DEFAULT}}"
          class="loadmore__icon"
          src="{{ type.icon }}"
          mode="aspectFill"
        ></image>

        <image
          wx:if="{{iconStatus === iconType.SHOW_CONFIG}}"
          class="loadmore__icon"
          src="{{ icon }}"
          mode="aspectFill"
        ></image>

      <text class="loadmore__text">{{ text || type.text }}</text>
      <view class="loadmore__line"></view>
    </block>
    <view wx:else class="loadmore__wrap">
      <view wx:if="{{iconStatus === iconType.SHOW_DEFAULT}}" class="loadmore__loading-icon"></view>
      <image wx:if="{{iconStatus === iconType.SHOW_CONFIG}}" class="loadmore__icon" src="{{ icon }}" mode="aspectFill"></image>
      <text class="loadmore__loading-text">{{ text || '加载中...' }}</text>
    </view>
  </view>
</template>

<script>
import { TYPES, IconType } from './config';

export default {
  config: {
    usingComponents: {}
  },
  behaviors: [],
  properties: {
    text: {
      type: String,
      value: ''
    },
    isEnd: {
      type: Boolean,
      value: false
    },
    icon: {
      type: String
    }
  },
  data: {
    type: TYPES[Math.floor(Math.random() * TYPES.length)],
    iconStatus: IconType.HIDDEN,
    iconType: IconType
  },
  attached() {
    let iconStatus = IconType.HIDDEN;
    const icon = this.data.icon;
    if (icon) {
      iconStatus = IconType.SHOW_DEFAULT;
    }
    if ((/\.(jpg|gif|jpeg|png)+$/).test(icon)) {
      iconStatus = IconType.SHOW_CONFIG;
    }
    this.setData({
      iconStatus
    })
  },
  methods: {}
}


</script>

<style lang="pcss" scoped>
@b loadmore {
  display: flex;
  width: 100%;
  height: 92rpx;
  justify-content: center;
  align-items: center;

  @e line {
    width: 100rpx;
    height: 1rpx;
    border-top: 1rpx solid #d2d2d2;
  }

  @e icon {
    width: 32rpx;
    height: 32rpx;
    margin-left: 16rpx;
  }


  @e text {
    margin: 0 16rpx 0 8rpx;
    color: #999;
    font-size: 28rpx;
  }

  @e wrap {
    color: #999;
    font-size: 28rpx;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  @e loading-icon {
    width:30px;
    height:30px;
    margin-right: 8px;
    display: inline-block;
    vertical-align: middle;
    animation: weuiLoading 1s steps(12, end) infinite;
    background: url('https://s10.mogucdn.com/mlcdn/c45406/171016_4a61e09hcadd157gadhdeje55e82c_32x32.png') no-repeat;
    -webkit-background-size: 100%;
    background-size: 100%;
  }

  @e loading-text {
    display: inline-block;
    vertical-align: middle;
    margin-left: 8rpx;
  }
}

</style>
